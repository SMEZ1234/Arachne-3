/*
 * This file was auto-generated by Arachne's Template Manager.
 * Edits made to this file will be overridden on regeneration.
 *
 * Template file: ScheduledSource.jgn
 * Variable definitions: ScheduledSource.json
 * Label used: Boolean
 */
package arachne.lib.scheduler;

import arachne.lib.io.GettableBoolean;
import arachne.lib.io.SettableBoolean;
import arachne.lib.pipeline.BooleanListener;
import arachne.lib.pipeline.BooleanPipe;
import arachne.lib.pipeline.BooleanSource;
import arachne.lib.pipeline.filters.ChangedBooleanFilter;
import arachne.lib.sequences.actions.Action;
import arachne.lib.sequences.actions.HostAction;

public class ScheduledBooleanSource implements Schedulable, BooleanSource
{
	protected final GettableBoolean target;
	protected final BooleanPipe pipe;

	public ScheduledBooleanSource(boolean initialValue, GettableBoolean target) {
		this.target = target;

		this.pipe = new BooleanPipe(initialValue);
		this.pipe.setFilter(new ChangedBooleanFilter());
	}

	public void run() {
		pipe.accept(target.get());
	}

	@Override
	public boolean get() {
		return pipe.get();
	}

	@Override
	public <SettableT extends SettableBoolean> SettableT attach(SettableT settable) {
		return pipe.attach(settable);
	}

	@Override
	public <ListenerT extends BooleanListener> ListenerT attachListener(ListenerT listener) {
		return pipe.attachListener(listener);
	}

	@Override
	public boolean detach(SettableBoolean settable) {
		return pipe.detach(settable);
	}

	@Override
	public boolean detachListener(BooleanListener listener) {
		return pipe.detachListener(listener);
	}

	@Override
	public void detachAll() {
		pipe.detachAll();
	}

	@Override
	public Action asAction(HostAction host) {
		return Schedulable.super.asAction(host);
	}
}
