/*
 * This file was auto-generated by Arachne's Template Manager.
 * Edits made to this file will be overridden on regeneration.
 *
 * Template file: Translator.jgn
 * Variable definitions: Translator.json
 * Label used: DoubleToGeneric
 */
package arachne.lib.pipeline.translators;

import java.util.function.DoubleFunction;

import arachne.lib.io.Settable;
import arachne.lib.io.SettableDouble;
import arachne.lib.pipeline.Listener;
import arachne.lib.pipeline.Pipe;
import arachne.lib.pipeline.Source;

public class FromDoubleTranslator<OutputT> implements SettableDouble, Source<OutputT>
{
	protected final Pipe<OutputT> pipe;
	protected final DoubleFunction<OutputT> translation;

	public FromDoubleTranslator(double initialInputValue, DoubleFunction<OutputT> translation) {
		this.pipe = new Pipe<OutputT>(translation.apply(initialInputValue));
		this.translation = translation;
	}

	@Override
	public void accept(double value) {
		pipe.accept(translation.apply(value));
	}

	@Override
	public OutputT get() {
		return pipe.get();
	}

	@Override
	public <SettableT extends Settable<OutputT>> SettableT attach(SettableT settable) {
		return pipe.attach(settable);
	}

	@Override
	public <ListenerT extends Listener<OutputT>> ListenerT attachListener(ListenerT listener) {
		return pipe.attachListener(listener);
	}

	@Override
	public boolean detach(Settable<OutputT> settable) {
		return pipe.detach(settable);
	}

	@Override
	public boolean detachListener(Listener<OutputT> listener) {
		return pipe.detachListener(listener);
	}

	@Override
	public void detachAll() {
		pipe.detachAll();
	}
}
