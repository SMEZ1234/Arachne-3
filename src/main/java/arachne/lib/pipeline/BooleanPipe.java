/*
 * This file was auto-generated by Arachne's Template Manager.
 * Edits made to this file will be overridden on regeneration.
 *
 * Template file: Pipe.jgn
 * Variable definitions: Pipe.json
 * Label used: Boolean
 */
package arachne.lib.pipeline;

import java.util.HashSet;
import java.util.Set;

import arachne.lib.function.BooleanPredicate;
import arachne.lib.io.SettableBoolean;

public class BooleanPipe extends BooleanSink implements BooleanSource
{
	protected final Set<SettableBoolean> outputs;
	protected final Set<BooleanListener> listeners;

	public BooleanPipe(boolean initialValue) {
		super(initialValue);

		this.outputs = new HashSet<SettableBoolean>();
		this.listeners = new HashSet<BooleanListener>();
	}

	@Override
	protected boolean overwriteValue(boolean value) {
		boolean oldValue = super.overwriteValue(value);

		for(SettableBoolean output : outputs) output.accept(value);
		for(BooleanListener listener : listeners) listener.onChange(oldValue, value);

		return oldValue;
	}

	@Override
	public BooleanPipe setModifier(BooleanPredicate modifier) {
		return (BooleanPipe) super.setModifier(modifier);
	}

	@Override
	public BooleanPipe setFilter(BooleanPredicate filter) {
		return (BooleanPipe) super.setFilter(filter);
	}

	@Override
	public <SettableT extends SettableBoolean> SettableT attach(SettableT settable) {
		outputs.add(settable);
		return settable;
	}

	@Override
	public <ListenerT extends BooleanListener> ListenerT attachListener(ListenerT listener) {
		listeners.add(listener);
		return listener;
	}

	@Override
	public boolean detach(SettableBoolean settable) {
		return outputs.remove(settable);
	}

	@Override
	public boolean detachListener(BooleanListener listener) {
		return listeners.remove(listener);
	}

	@Override
	public void detachAll() {
		outputs.clear();
		listeners.clear();
	}
}
